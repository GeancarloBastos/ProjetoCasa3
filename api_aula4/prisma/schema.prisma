// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// model Marca {
//   id     Int     @id @default(autoincrement())
//   nome   String  @db.VarChar(30)
//   moveis Movel[]

//   @@map("marcas")
// }

model Produto {
  id            Int          @id @default(autoincrement())
  descricao     String       @db.VarChar(40)
  preco         Decimal      @db.Decimal(10, 2)
  foto          String
  // destaque     Boolean      @default(true)
  // createdAt    DateTime     @default(now())
  // updatedAt    DateTime     @updatedAt
  tipoMaterial  TipoMaterial?
  tipoProduto   TipoProduto           @relation(fields: [tipoProdutoId], references: [id])
  tipoProdutoId Int
  cor           Cor                 @relation(fields: [corId], references: [id])
  corId         Int
  carrinhos     CarrinhoProduto[]

  // marca        Marca        @relation(fields: [marcaId], references: [id])
  // marcaId      Int
  @@map("produtos")
}

model Carrinho {
  id            Int          @id @default(autoincrement())
  valor         Decimal      @db.Decimal(10, 2)
  createdAt    DateTime     @default(now())
  cliente     Cliente           @relation(fields: [clienteId], references: [id])
  clienteId   String
  produtos   CarrinhoProduto[]
  
  @@map("req_carrinho")
}

model CarrinhoProduto {
  id          Int       @id @default(autoincrement())
  produto     Produto @relation(fields: [produtoId], references: [id])
  produtoId   Int
  carrinho    Carrinho @relation(fields: [carrinhoId], references: [id])
  carrinhoId Int
  quantidade Int

  @@map("carrinho_produtos")
}


model TipoProduto {
  id         Int         @id @default(autoincrement())
  nome       String      @db.VarChar(60)
  produtos   Produto[]
  @@map("tipo_produtos")
}

model Cliente {
  id         String      @id @default(uuid()) @db.VarChar(36)
  nome       String      @db.VarChar(60)
  email      String      @unique @db.VarChar(60)
  senha      String      @db.VarChar(60) // senha deve ser varchar(60)
  telefone   String      @db.VarChar(20)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orcamentos Orcamento[]
  carrinhos  Carrinho[]

  @@map("clientes")
}

model Admin {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(60)
  email        String   @db.VarChar(60) @unique
  senha        String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  @@map("admins")
}

model Orcamento {
  id          Int               @id @default(autoincrement())
  cliente     Cliente           @relation(fields: [clienteId], references: [id])
  clienteId   String
  status      String            @default("PENDENTE") @db.VarChar(60)
  acabamento  String            @db.VarChar(60)
  ambiente    String            @db.VarChar(60)
  faixaPreco  String            @db.VarChar(120)
  observacoes String            @db.VarChar(255)
  prazo       String            @db.VarChar(255)
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  itens       ItemOrcamento[]
  cores       CorOrcamento[]
  imagens     ImagemOrcamento[]
  adicionais AdicionalOrcamento[]

  @@map("orcamentos")
}

model Item {
  id         Int             @id @default(autoincrement())
  nome       String          @db.VarChar(60)
  orcamentos ItemOrcamento[]
  @@map("itens")
}

model Cor {
  id         Int            @id @default(autoincrement())
  nome       String         @db.VarChar(60)
  orcamentos CorOrcamento[]
  produtos   Produto[]

  @@map("cores")
}

model Adicional {
  id         Int            @id @default(autoincrement())
  nome       String         @db.VarChar(60)
  orcamentos AdicionalOrcamento[]

  @@map("adicionais")
}

model AdicionalOrcamento {
  id          Int       @id @default(autoincrement())
  orcamento   Orcamento @relation(fields: [orcamentoId], references: [id])
  orcamentoId Int
  adicional   Adicional @relation(fields: [adicionalId], references: [id])
  adicionalId Int

  @@map("orcamento_adicionais")
}

model ItemOrcamento {
  id          Int       @id @default(autoincrement())
  orcamento   Orcamento @relation(fields: [orcamentoId], references: [id])
  orcamentoId Int
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      Int

  @@map("orcamento_itens")
}

model CorOrcamento {
  id          Int       @id @default(autoincrement())
  orcamento   Orcamento @relation(fields: [orcamentoId], references: [id])
  orcamentoId Int
  cor         Cor       @relation(fields: [corId], references: [id])
  corId       Int

  @@map("orcamento_cores")
}

model ImagemOrcamento {
  id            Int       @id @default(autoincrement())
  urlReferencia String    @db.VarChar(255) // Armazena o link da imagem gerado pelo Supabase da referencia
  urlPlanta     String    @db.VarChar(255) // Armazena o link da imagem gerado pelo Supabase da planta
  orcamento     Orcamento @relation(fields: [orcamentoId], references: [id])
  orcamentoId   Int // Relacionamento com a tabela Orcamento
  uploadedAt    DateTime  @default(now())

  @@map("imagens_orcamentos")
}


enum TipoMaterial {
  MADEIRA
  MDF
  MDP
  PEDRA
  ESTOFADO
  // AROMA
  // MANTA
  // ESPELHO
}

